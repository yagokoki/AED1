#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int Separa(int p, int r, int v[]) {
  int c, j, k, t;
  c = v[r];
  j = p;
  for (k = p; /*A*/ k < r; k++)
    if (v[k] <= c) {
      t = v[j], v[j] = v[k], v[k] = t;
      j++;
    }
  v[r] = v[j], v[j] = c;
  return j;
}

void Quicksort(int p, int r, int v[]) {
  int j;
  if (p < r) {
    j = Separa(p, r, v);
    Quicksort(p, j - 1, v);
    Quicksort(j + 1, r, v);
  }
}

int main(void) {
  int n, i, j;
  clock_t tinicial, tfinal;
  double tempo;
  double tempomili;

  // cria um vetor onde serão guardados os valores
  int v[20000];

  // coloca valores aleatórios dentro do vetor
  for (i = 1; i <= 4; i++) {
    n = 5000 * i;
    for (j = 0; j < n; j++) {
      v[j] = rand();
    }

    // guarda o valor de tempo no momento em que a função de ordenação é
    // chamada, e guarda outro para quando a função acaba de ser executada;
    tinicial = clock();
    Quicksort(0, n, v);
    tfinal = clock();

    // compara o valor final com o inicial para encontrar a variação do tempo e
    // depois transforma de segundos para milissegundos
    tempo = ((double)(tfinal - tinicial)) / CLOCKS_PER_SEC;
    tempomili = tempo * 1000;

    printf("tempo de execucao: %f milissegundos ", tempomili);
    printf("\nquantidade de valores ordenados: %d\n", n);
  }
  return 0;
}
